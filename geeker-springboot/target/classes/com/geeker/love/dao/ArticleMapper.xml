<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geeker.love.dao.ArticleMapper">


    <!--here-->
    <select id="getPostByClass" resultType="com.geeker.love.pojo.post">
        select * from post where post_class_id=#{pc_id}
    </select>
    <!--/**
    * 实现多表联查
    *      1. 通过user_id查username和userpic
    *      2. 通过post_id查comment
    *      3. 通过post_id查support 忽略
    */-->

    <select id="getPostByClassMulti" resultType="java.util.Map">
        SELECT DISTINCT p.id, u.username, u.userpic, p.create_time newstime,
                p.title, p.titlepic,count(DISTINCT c.id) comment_count, count(DISTINCT s.id) support_count
        FROM post AS p
        LEFT JOIN comment AS c ON p.id = c.post_id
        LEFT JOIN user AS u ON p.user_id = u.id
        LEFT JOIN support AS s ON p.id = s.post_id
        WHERE p.post_class_id=#{pc_id}
        GROUP BY p.id
        ORDER BY p.create_time
    </select>

 <select id="getPostByUser" resultType="com.geeker.love.pojo.post">
     select * from post where user_id=#{uid} and isopen=1
 </select>
    <select id="getAllPostByUser" resultType="com.geeker.love.pojo.post">
        select * from post where user_id=#{uid}
    </select>
    <select id="getPostById" resultType="com.geeker.love.pojo.post">
        select * from post where id=#{pid}
    </select>
    <insert id="DingCai" parameterType="com.geeker.love.pojo.support" keyProperty="id" statementType="PREPARED">
        insert into support(user_id,post_id,type,create_time)values(#{uid},#{pid},#{type},unix_timestamp(now()))
    </insert>
    <select id="getSupport" resultType="com.geeker.love.pojo.support">
        select * from support where user_id=#{uid} and post_id=#{pid}
    </select>
    <update id="updateSupport" parameterType="com.geeker.love.pojo.support">
        update support set type=#{type} where user_id=#{uid} and post_id=#{pid}
    </update>
    <select id="getSupportById" resultType="com.geeker.love.pojo.support">
        select * from support where user_id=#{uid}
    </select>


    <select id="getCommentsByPostId" resultType="java.util.Map">
        SELECT user.username, user.userpic, comment.data,
            comment.create_time
        FROM comment, user
        WHERE comment.user_id = user.id AND post_id=#{post_id}
        ORDER BY comment.create_time DESC
    </select>
</mapper>